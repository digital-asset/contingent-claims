-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Test.Util where

import ContingentClaims.Claim hiding (C, F)
import ContingentClaims.Observation qualified as O
import ContingentClaims.Financial
import DA.Assert ((===))
import DA.Date
import Daml.Script
import Prelude hiding (enumerate, length, or, and, (<=))
import ContingentClaims.Util (hasintrinsicAcquisitionTime, intrinsicAcquisitionTime, expiry, payoffs)

type C = Claim Date Decimal Text Text

utils = script do
  let call : O.Observation Date Decimal Text = O.observe "VOD.L" - O.pure 103.4
      t = date 2021 Jul 30
      multiplier : O.Observation Date Decimal Text = O.pure 50_000.0

  expiry (european t (Scale call $ one "USD")) === Some t
  payoffs (european t (Scale call $ one "USD")) === [(call, "USD")]

  expiry (forward t multiplier (one "USD")) === Some t
  payoffs (forward t multiplier (one "USD")) === [(multiplier, "USD")]

-- | Test `intrinsicAcquisitionTime` and `hasintrinsicAcquisitionTime`
testAcquisitionTime = script do

  let [a,b] = ["a","b"]
      today = date 1970 Jan 1
      tomorrow = succ today
      o1 = O.observe a
      o2 = O.observe b

  intrinsicAcquisitionTime (zero : C) === None
  intrinsicAcquisitionTime (one a : C) === None

  let c1 = when (at today) $ one a
      c2 = anytime (at tomorrow) $ one b
      c3 : C = when (o1 <= o2) $ one a
      c4 : C = anytime (o1 <= o2) (one a)

  intrinsicAcquisitionTime c1 === Some today
  intrinsicAcquisitionTime c2 === Some tomorrow
  intrinsicAcquisitionTime c3 === None
  intrinsicAcquisitionTime c4 === None
  intrinsicAcquisitionTime (and c1 c2) === Some today
  intrinsicAcquisitionTime (mconcat [c1, c2, c3]) === None

  let c5 : C = scale o1 $ one a
      c6 : C = cond (o1 <= o2) (one a) (one b)
      c7 : C = or (one a) (one b)
      c8 : C = until (o1 <= o2) $ one a
      c9 : C = until (at tomorrow) $ c1
      c10 : C = give c2

  intrinsicAcquisitionTime c5 === None
  intrinsicAcquisitionTime c6 === None
  intrinsicAcquisitionTime c7 === None
  intrinsicAcquisitionTime c8 === None
  intrinsicAcquisitionTime c9 === Some today
  intrinsicAcquisitionTime c10 === Some tomorrow

  hasintrinsicAcquisitionTime c1 === True
  hasintrinsicAcquisitionTime c3 === False

  






      





