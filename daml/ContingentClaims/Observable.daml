--
-- Copyright (c) 2021, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
--

{-# LANGUAGE NoImplicitPrelude #-}

module ContingentClaims.Observable where

import Prelude (Bool, Decimal)

infixl 6 +
infixl 6 -
infixl 7 *
infixl 7 /

type Observable f t = (TimeF f t,
  PointF f t t,
  PointF f t Decimal,
  RingF f t Decimal,
  InequalityF f t Decimal,
  InequalityF f t t,
  LogicF f t Bool)

class TimeF f t where
  time : f t t

class PointF f t a where
  pure : a -> f t a

class RingF f t a where
  zero : f t a
  one : f t a
  (+) : f t a -> f t a -> f t a
  negate : f t a -> f t a
  (-) : f t a -> f t a -> f t a
  x - y = x + ContingentClaims.Observable.negate y
  (*) : f t a -> f t a -> f t a
  (/) : f t a -> f t a -> f t a

class InequalityF f t a where
  (<=) : f t a -> f t a -> f t Bool
  (==) : f t a -> f t a -> f t Bool

class LogicF f t a where
  not : f t a -> f t Bool
  (&&) : f t a -> f t a -> f t Bool
  (||) : f t a -> f t a -> f t Bool
